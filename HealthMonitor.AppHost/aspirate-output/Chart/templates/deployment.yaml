apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-monitor
  annotations: {}
  labels:
    app: health-monitor
spec:
  minReadySeconds: 60
  replicas: 1
  selector:
    matchLabels:
      app: health-monitor
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: health-monitor
    spec:
      containers:
        - name: health-monitor-cluster
          env:
            - name: Orleans__Endpoints__SiloPort
              value: "8000"
            - name: Orleans__Endpoints__GatewayPort
              value: "8001"
            - name: Orleans__Reminders__ProviderType
              value: Redis
            - name: Orleans__Reminders__ServiceKey
              value: orleans-redis
            - name: Orleans__GrainStorage__Default__ProviderType
              value: Redis
            - name: Orleans__GrainStorage__Default__ServiceKey
              value: orleans-redis
            - name: OTEL_SERVICE_NAME
              value: health-monitor-cluster
          envFrom:
            - configMapRef:
                name: health-monitor
            - secretRef:
                name: health-monitor
          image: '{{ .Values.images.healthmonitorcluster }}'
          imagePullPolicy: Always
          ports:
            - name: cluster-silo
              containerPort: 8000
            - name: cluster-gateway
              containerPort: 8001
          volumeMounts:
            - name: cluster
              mountPath: /app/appsettings.Production.json
              subPath: appsettings.Production.json
        - name: health-monitor-cluster-dashboard
          env:
            - name: Orleans__Endpoints__SiloPort
              value: "8002"
            - name: Orleans__Endpoints__GatewayPort
              value: "8003"
            - name: Orleans__Reminders__ProviderType
              value: Redis
            - name: Orleans__Reminders__ServiceKey
              value: orleans-redis
            - name: Orleans__GrainStorage__Default__ProviderType
              value: Redis
            - name: Orleans__GrainStorage__Default__ServiceKey
              value: orleans-redis
            - name: OTEL_SERVICE_NAME
              value: health-monitor-cluster-dashboard
            - name: HTTP_PORTS
              value: "8090"
          envFrom:
            - configMapRef:
                name: health-monitor
            - secretRef:
                name: health-monitor
          image: '{{ .Values.images.healthmonitorclusterdashboard }}'
          imagePullPolicy: Always
          ports:
            - name: cluster-dboard
              containerPort: 8090
            - name: dboard-silo
              containerPort: 8002
            - name: dboard-gateway
              containerPort: 8003
        - name: health-monitor-server
          env:
            - name: OTEL_SERVICE_NAME
              value: health-monitor-server
            - name: HTTP_PORTS
              value: "8080"
          envFrom:
            - configMapRef:
                name: health-monitor
            - secretRef:
                name: health-monitor
          image: '{{ .Values.images.healthmonitor }}'
          imagePullPolicy: Always
          ports:
            - name: server
              containerPort: 8080
          volumeMounts:
            - name: server
              mountPath: /app/appsettings.Production.json
              subPath: appsettings.Production.json
        - name: aspire-dashboard
          env:
            - name: DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS
              value: "true"
          image: '{{ .Values.images.aspiredashboard }}'
          imagePullPolicy: IfNotPresent
          ports:
            - name: aspire-dboard
              containerPort: 18888
            - name: otlp
              containerPort: 18889
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: server
          configMap:
            name: health-monitor-app
            items:
              - key: server.appsettings.Production.json
                path: appsettings.Production.json
        - name: cluster
          configMap:
            name: health-monitor-app
            items:
              - key: cluster.appsettings.Production.json
                path: appsettings.Production.json
      terminationGracePeriodSeconds: 180
@using ApexCharts
@using HealthMonitor.Client.Model

<div style="height: 100%; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 8px; padding: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); overflow: hidden;">
    <ApexChart TItem="TrendDataPoint"
               Title=""
               Height="@(Height - 16)"
               Options="@_chartOptions">

        @foreach (var serviceGroup in Data.GroupBy(d => d.Label))
        {
            <ApexPointSeries TItem="TrendDataPoint"
                           Items="@serviceGroup.Select(MapToTrendPoint).ToList()"
                           Name="@serviceGroup.Key"
                           SeriesType="SeriesType.Area"
                           XValue="@(e => e.Time.ToString("HH:mm"))"
                           YValue="@(e => (decimal)e.HealthScore)" />
        }
    </ApexChart>
</div>

@code {
    [Parameter] public List<ChartData> Data { get; set; } = new();
    [Parameter] public int Height { get; set; } = 350;

    private readonly ApexChartOptions<TrendDataPoint> _chartOptions = new()
    {
        Chart = new Chart
        {
            Toolbar = new Toolbar { Show = true },
            Zoom = new Zoom { Enabled = true },
            Background = "transparent",
            ForeColor = "#ffffff"
        },
        Colors = new List<string> { "#00D9FF", "#FF6B6B", "#4ECDC4", "#45B7D1", "#96CEB4", "#FFEAA7" },
        Fill = new Fill
        {
            Type = new List<FillType> { FillType.Gradient },
            Gradient = new FillGradient
            {
                Shade = GradientShade.Dark,
                Type = GradientType.Horizontal,
                ShadeIntensity = 0.5,
                OpacityFrom = 0.8,
                OpacityTo = 0.3
            }
        },
        Stroke = new Stroke
        {
            Curve = Curve.Smooth,
            Width = 4
        },
        Legend = new Legend
        {
            Position = LegendPosition.Top,
            FontSize = "14px"
        },
        Xaxis = new XAxis
        {
            Type = XAxisType.Category,
            Title = new AxisTitle { Text = "Time" }
        },
        Yaxis =
        [
            new YAxis
            {
                Title = new AxisTitle { Text = "Health Score (%)" },
                Max = 100,
                Min = 0,
                TickAmount = 10,
                ForceNiceScale = true,
                DecimalsInFloat = 1
            }
        ],
        Tooltip = new Tooltip
        {
            Enabled = true,
            Shared = true
        },
        Annotations = new Annotations
        {
            Yaxis =
            [
                new AnnotationsYAxis
                {
                    Y = 95,
                    Y2 = 100,
                    BorderColor = "#00E396",
                    FillColor = "#00E396",
                    Opacity = 0.1,
                    Label = new Label
                    {
                        Text = "âœ“ Excellent Health Zone",
                        Style = new Style
                        {
                            Color = "#fff",
                            Background = "#00E396",
                            FontSize = "12px"
                        },
                        Position = LabelPosition.Right
                    }
                },
                new AnnotationsYAxis
                {
                    Y = 70,
                    Y2 = 95,
                    BorderColor = "#FEB019",
                    FillColor = "#FEB019",
                    Opacity = 0.05,
                    Label = new Label
                    {
                        Text = "âš  Warning Zone",
                        Style = new Style
                        {
                            Color = "#fff",
                            Background = "#FEB019",
                            FontSize = "12px"
                        },
                        Position = LabelPosition.Right
                    }
                },
                new AnnotationsYAxis
                {
                    Y = 0,
                    Y2 = 70,
                    BorderColor = "#FF4560",
                    FillColor = "#FF4560",
                    Opacity = 0.05,
                    Label = new Label
                    {
                        Text = "ðŸš¨ Critical Zone",
                        Style = new Style
                        {
                            Color = "#fff",
                            Background = "#FF4560",
                            FontSize = "12px"
                        },
                        Position = LabelPosition.Right
                    }
                }
            ]
        }
    };

    private TrendDataPoint MapToTrendPoint(ChartData data) =>
        new()
        {
            Time = data.Time,
            HealthScore = data.Value,
            ServiceId = data.Label
        };

    public class TrendDataPoint
    {
        public DateTime Time { get; set; }
        public double HealthScore { get; set; }
        public string ServiceId { get; set; } = "";
    }
}
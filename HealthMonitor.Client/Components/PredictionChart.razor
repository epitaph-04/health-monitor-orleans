<div style="height: 100%;">
    <MudChart 
        ChartType=ChartType.Line
        ChartSeries="@_chartSeries" 
        XAxisLabels="@_xAxisLabels" 
        Width="100%" 
        Height="350px" 
        ChartOptions="@_chartOptions" 
        AxisChartOptions="_axisChartOptions" />
</div>

@code {
    [Parameter] public List<PredictionsPanel.PredictionChartData> Data { get; set; } = new();

    private readonly List<ChartSeries> _chartSeries = [];
    private string[] _xAxisLabels = [];
    private readonly ChartOptions _chartOptions = new()
    {
        ShowLegend = false,
        XAxisLines = true,
        MaxNumYAxisTicks = 11,
        YAxisTicks = 10,
        YAxisFormat = "0'%'",
        LineStrokeWidth = 2,
        InterpolationOption = InterpolationOption.NaturalSpline
    };
    private readonly AxisChartOptions _axisChartOptions = new () { MatchBoundsToSize = true };

    protected override void OnParametersSet()
    {
        if (Data.Any())
        {
            SetupChartData();
        }
    }

    private void SetupChartData()
    {
        var index = 0;
        foreach (var serviceGroup in Data.GroupBy(d => d.ServiceId))
        {
            _chartSeries.Add(new ChartSeries
            {
                Name = serviceGroup.Key,
                LineDisplayType = LineDisplayType.Line,
                Data = serviceGroup.Select(p => p.PredictedHealth).ToArray(),
                FillOpacity = 0.5,
                Index = index++
            });
        }

        var xAxis = new HashSet<DateTime>(Data.Select(d => d.Time));
        var labels = new List<string>(); 
        foreach (var chartAxis in xAxis.OrderBy(d => d))
        {
            labels.Add(chartAxis.ToString("HH:mm"));
        }

        _xAxisLabels = labels.ToArray();
    }

    private PredictionDataPoint MapToPredictionPoint(PredictionsPanel.PredictionChartData data) =>
        new PredictionDataPoint
        {
            Time = data.Time,
            PredictedHealth = data.PredictedHealth,
            Confidence = data.Confidence,
            ServiceId = data.ServiceId
        };

    public class PredictionDataPoint
    {
        public DateTime Time { get; set; }
        public double PredictedHealth { get; set; }
        public double Confidence { get; set; }
        public string ServiceId { get; set; } = "";
    }
}